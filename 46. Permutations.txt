Given a collection of distinct integers, return all possible permutations.

Example:

Input: [1,2,3]
Output:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]
  [2,3,1],
  [3,1,2],
  [3,2,1]
]class Solution {
    vector < vector <int> > ans;
public:
    void perrec(vector<int>a,int l,int r){
        int i;
        if(l==r){
            ans.push_back(a);
            return;
        }
        for(i=l;i<=r;i++){
            swap(a[l],a[i]);
            perrec(a,l+1,r);
            swap(a[l],a[i]);
        }
        
        
    }
    vector<vector<int>> permute(vector<int>& nums) {
        int n= nums.size();
        if(n==1){
            ans.push_back(nums);
            return ans;
        }
        if(n==2){
            ans.push_back(nums);
            swap(nums[0],nums[1]);
            ans.push_back(nums);
            return ans;
        }
        perrec(nums,0,n-1);
        
        return ans;
    }
};