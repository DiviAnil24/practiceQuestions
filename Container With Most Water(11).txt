Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.

Notice that you may not slant the container.

Input: height = [4,3,2,1,4]
Output: 16

Input: height = [1,2,1]
Output: 2


class Solution {
public:
    int maxArea(vector<int>& height) {
    int n= height.size();    
    int low=0,high=n-1;
	int ans=0;
	while(high>low)
	{
		int a1 = min(height[high],height[low]);
		int area= a1*(high-low);
		if(area>ans)
			ans=area;
		if(height[low] < height[high])
			low++;
		else
			high--;	
		}
		return ans;        
    }
};




